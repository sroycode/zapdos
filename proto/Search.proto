syntax  =  "proto3";
option optimize_for  =  SPEED;
// option cc_enable_arenas  =  true;

package zpds.search;

// Language Types
enum LangTypeE {
	EN                                                              =  0; // english
}

// Search Types
enum DataTypeE {
	LOCAL                                                           =  0; // local data
	TEXT                                                            =  1; // wiki data
}

// Lookup Record Source Types
enum SourceTypeE {
	S_NONE                                                          =  0; // placeholder ignored

	// local data type
	S_OSM                                                           =  1; // openstreetmaps
	S_MYLOCAL                                                       =  2; // your own local data

	// for text data
	S_WIKI                                                          = 11; // wiki data
	S_MYTEXT                                                        = 12; // your own text data
}

// Query DS

message PointLocT {
	string ccode                                                    =  1; // country code
	string scode                                                    =  2; // state code
	string city                                                     =  3; // city
	double lat                                                      =  4; // latitude
	double lon                                                      =  5; // longitude
	string geohash                                                  =  6; // for geo
	string pincode                                                  =  7; // pincode

	bool dont_use                                                   =  8; // dont use this 
}

enum QueryTypeE {
	QRY_UNKNOWN                                                     =  0; 
	QRY_COMPLETION_PHOTON                                           =  1; 
	QRY_COMPLETION_TEXTDATA                                         =  2; 
}

message UsedParamsT {
	PointLocT                     cur                               =  1; // detected coords INPUT lat lon
	PointLocT                     top_right                         =  2; // for geo bounded
	PointLocT                     bottom_left                       =  3; // for geo bounded
	uint64                        items                             =  4; // INPUT no of results to return

	LangTypeE                     lang                              =  5; // INPUT language
	string                        name                              =  6; // INPUT profile name
	DataTypeE                     dtyp                              =  7; // data type

	uint64                        no_of_words                       = 10; // no of words

	string                        query                             = 11; // stemmed query
	string                        raw_query                         = 12; // INPUT raw query

	bool                          full_words                        = 15; // INPUT flag by space at end
	bool                          sort_by_dist                      = 16; // INPUT sort by distance

	bool                          all_partial                       = 17; // use partials for all words
	bool                          begin_with                        = 19; // prefer beginning with
	bool                          last_partial                      = 20; // lst is partial

	string                        extra                             = 21; // extra to add
	bool                          extra_is_full                     = 22; // extra to add as full_word

	int64                         distance_band                     = 24; // sort distance band in m
	double                        distance_def                      = 25; // default distance in m

	// output
	repeated uint64               ids                               = 26; // ids 
	repeated string               sortkeys                          = 28; // sorting keys

}

enum LimitTypeE {
	L_NONE                                                          =  0; // default
	L_CCODE                                                         =  1; // by country code
	L_CITY                                                          =  2; // by city , avoid , use nbrhash3
	L_PINCODE                                                       =  3; // by pincode

	L_GEOHASH3                                                      =  4; // geohash 3
	L_GEOHASH5                                                      =  5; // geohash 5
	L_GEOHASH7                                                      =  6; // geohash 7
	L_GEOHASH9                                                      =  7; // geohash 9

	L_NBRHASH3                                                      =  8; // geohash 3 neighbours
	L_NBRHASH5                                                      =  9; // geohash 5 two level neighbours
}

enum SearchTypeE {
	S_DEFAULT                                                       =  0;
	S_BEGIN                                                         =  1;
	S_PARTIAL                                                       =  2;
	S_FULLWORD                                                      =  3;
	S_FIRSTWORD                                                     =  4;

	S_NAME                                                          =  5;
	S_TAGS                                                          =  6;
}

enum OrderTypeE {
	O_DEFAULT                                                       =  0; // imp only no distance other than filters
	O_DIST_BAND                                                     =  1; // distance and importance band
	O_DIST_ONLY                                                     =  2; // distance only , shortcut to band with 10m
}

enum InputTypeE {
	I_DEFAULT                                                       =  0; // default
	I_ONEWORD                                                       =  1; // special case oneword query
}

message QueryOrderT {
	string                        rec_tagid                          =  1; // INPUT this tag id for merge needs
	uint64                        weight                             =  2; // INPUT order descending
	SourceTypeE                   rec_styp                           =  3; // INPUT query record styp
	uint64                        rec_count                          =  4; // INPUT  max records
	uint64                        oneword_length                     =  5; // INPUT  max length of oneword query to apply this

	string                        desc                               =  8; // INPUT description of this

	double                        distance_def                       =  9; // INPUT default distance in m
	int64                         distance_band                      = 10; // INPUT sort distance band in m

	LimitTypeE                    limit_type                         = 11; // INPUT limit by
	SearchTypeE                   search_type                        = 12; // INPUT search text for
	OrderTypeE                    order_type                         = 13; // INPUT order by
	InputTypeE                    input_type                         = 14; // INPUT input type

}

message QueryProfileT {
	repeated QueryOrderT          orders                             =  1; // the order
}
